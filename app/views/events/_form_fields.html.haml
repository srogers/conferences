-# Conferences get a name generated from the organizer - allow the user to change it at create time so special events
-# can get a sensible name, and the friendly URL will be based on that name.
= f.input :organizer_id, as: 'select', collection: @organizer_selections, include_blank: false
= f.input :event_type, as: :select, collection: Conference::EVENT_TYPES, include_blank: false
= f.input :use_episodes, :as => :boolean, label: "Use episode numbers", hint: 'Use episode numbers for things like podcasts and lessons where the source material is numbered.'
= f.input :start_date, as: :date, start_year: Setting.base_event_year, end_year: Date.today.year + 1, order: [:month, :day, :year]
= f.input :end_date, as: :date, start_year: Setting.base_event_year, end_year: Date.today.year + 1, order: [:month, :day, :year]
- if name_blank_or_default?(@conference)
  - hint = "Don't change this unless absolutely necessary for clarity (e.g. special events) -  AUTO-UPDATING"
- else
  - hint = "This is a custom name - delete it to return to the default: #{@conference.organizer&.abbreviation} #{@conference.start_date&.year}"
= f.input :name, hint: hint
= f.label :description
= f.trix_editor :description
.small.mb-3 Historic or organizational details specific to this event (e.g., attendance)
= f.input :registration_url, input_html: { autocomplete: "off" }, hint: "A link where attendees can sign up"
= render partial: 'shared/location', locals:  {f: f, location_types: Conference::LOCATION_TYPES}
= f.input :completed, as: :boolean, hint: "Check this when all the event's presentations have been entered."
- if current_user&.editor? || current_user&.admin?
  = f.label :editors_notes, "Editor's Notes"
  = f.trix_editor :editors_notes
  .small Only visible to other editors. Use for source documentation and any notes other editors might find useful
