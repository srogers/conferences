= f.input :name, label: 'Presentation Name'
.row
  .col-md-8
    = f.input :conference_id, collection: [[@presentation.conference_name,@presentation.conference_id]], label: "Event Name", input_html: { data: { delimiter: ',', placeholder: "enter an event name or year...", source: events_path(format: :json) }, class: "select2-autocomplete", id: "conference_picker" }
  .col-md-4
    - if @presentation.persisted?
      %br
      %p
        = link_to icon('fas', 'unlink', :class => 'fa-fw') + " Disassociate", presentation_path(@presentation, presentation: { conference_id: nil } ), method: :patch, class: "btn btn-xs btn-primary mt-2 #{ @presentation.conference_id.present? ? '' : 'disabled' }"
= f.label :description
= f.trix_editor :description
= f.input :tag_list, input_html: { value: @tags, class: 'tagsinput',  autocomplete: "off" }, label: 'Topics', hint: "economics, politics, psychology, etc."
= f.input :parts, input_html: { autocomplete: "off" }
= f.input :handout, label: @presentation.handout.present? ? 'Change handout' : 'Add handout'
- if @presentation.handout.present?
  = f.input :remove_handout, as: :boolean
= f.input :date, as: :date, start_year: Setting.base_event_year, end_year: Date.today.year + 1, order: [:month, :day, :year]
-# Don't show Venue unless the presentation is attached to a multi-venue event
- if @presentation.try(:conference).try(:multi_venue?)
  = render partial: 'shared/location', locals:  {f: f, location_types: Presentation::LOCATION_TYPES}
- if @presentation.try(:conference).try(:use_episodes?)
  = f.input :episode, hint: "Episode number - leave blank if it doesn't apply."
- if current_user.editor? || current_user.admin?
  = f.label :editors_notes, "Editor's Notes"
  = f.trix_editor :editors_notes
  .small Only visible to other editors. Use for source documentation and any notes other editors might find useful
